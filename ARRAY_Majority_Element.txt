import java.util.HashMap;

// a majority element in an array A[] of size n is an element that appears more than 
// n/2 times (and hence is at most one such element)

// this implementation uses a hashmap, the keys are the elements and the values
// are the counts of the elements. We traverse the array and increment the counts
// for the elements, whenever one element count is greater than n/2 we return that
// element

class MajorityElement {


	static void findMajority(int arr[]) {
	
		HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
		
		for (int i = 0; i < arr.length; i++) {
			if (map.containsKey(arr[i])) {
				int count = map.get(arr[i]) + 1;
				if (count > arr.length / 2) {
					System.out.println("The majority element is  " + arr[i]);
					return;
				} else {
					map.put(arr[i], count);
				}
				
			} else {
				map.put(arr[i], 1);
			}
			System.out.println("The system doesn't contain a majority element");
		}	
	}
	
	
	/* Driver program to test the above functions */
    public static void main(String[] args) 
    {
        int a[] = new int[]{2,2,2,2,5,5,2,3,3};
         
        findMajority(a);
    }

}