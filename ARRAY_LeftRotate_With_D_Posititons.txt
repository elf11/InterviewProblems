// rotate an array left with d positions
// Time complexity O(n), auxiliary space O(1)

class LeftRotate {

	static void leftRotate(int arr[], int d) {
	
		int n = arr.length;
		reverse(arr, 0, d-1);
		reverse(arr, d + 1, n-1);
		reverse(arr, 0, n-1);
	
	}
	
	static void reverse(int arr[], int start, int end) {
	
		int temp;
		while (start < end) {
			temp = arr[start];
			arr[start] = arr[end];
			arr[end] = temp;
			start++;
			end--;
		}
	
	}
	
	static void printArray(int arr[]) {
	
		for (int i = 0; i < arr.length; i++) {
			System.out.println(arr[i] + " ");
		}
	
	}
	
	public static void main(String[] args) {
		int arr[] = {1,2,3,4,5,6,7};
		leftRotate(arr, 2);
		printArray(arr);
	}



}